name: CI / CD

on:
  push:
    branches: [main]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    # Change or remove this block if your code is actually at repo-root
    defaults:
      run:
        working-directory: shifts_website

    permissions:
      contents: read       # checkout
      id-token: write      # Workload Identity Federation / OIDC → GCP

    env:                   # handy env aliases for the whole job
      INSTANCE_CONNECTION_NAME: ${{ secrets.INSTANCE_CONNECTION_NAME }}
      DB_USER:                   ${{ secrets.DB_USER }}
      DB_PASS:                   ${{ secrets.DB_PASS }}
      DB_NAME:                   ${{ secrets.DB_NAME }}
      GOOGLE_PROJECT:            ${{ secrets.GOOGLE_PROJECT }}
      REGION:                    us-central1
      SERVICE:                   shift-scheduler

    steps:
      
    #  Source + Python deps + tests
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install Python dependencies
      run: |
        echo "🔧 Installing deps"
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run unit tests
      run: |
        echo "🧪 Running pytest"
        pytest -q

    # ──────────────────────────────────────────────────────────────
    #  GCP auth + Cloud-SQL Proxy → run Alembic & seed script
    # ──────────────────────────────────────────────────────────────
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Start Cloud SQL Auth proxy
      uses: google-github-actions/cloud-sql-proxy@v0
      with:
        instances: ${{ env.INSTANCE_CONNECTION_NAME }}

    - name: Run Alembic migrations
      run: |
        echo "📜 alembic upgrade head"
        alembic upgrade head

    - name: Seed users table
      run: |
        echo "🌱 Seeding users"
        python seed_users.py

    # ──────────────────────────────────────────────────────────────
    #  Build container, push to GCR, deploy to Cloud Run
    # ──────────────────────────────────────────────────────────────
    - name: Authorise docker to push to Artifact Registry / GCR
      run: gcloud auth configure-docker --quiet

    - name: Build & push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: Dockerfile
        push: true
        tags: gcr.io/${{ env.GOOGLE_PROJECT }}/${{ env.SERVICE }}:latest

    - name: Docker build finished
      run: echo "🐳 Docker image pushed"

    - name: Deploy to Cloud Run
      run: |
        echo "🚀 Deploying $SERVICE to Cloud Run"
        gcloud run deploy "$SERVICE" \
          --image   "gcr.io/$GOOGLE_PROJECT/$SERVICE:latest" \
          --platform managed \
          --region  "$REGION" \
          --allow-unauthenticated \
          --set-env-vars "DB_USER=$DB_USER,DB_PASS=$DB_PASS,DB_NAME=$DB_NAME,INSTANCE_CONNECTION_NAME=$INSTANCE_CONNECTION_NAME,GOOGLE_ID=${{ secrets.GOOGLE_ID }},GOOGLE_SECRET=${{ secrets.GOOGLE_SECRET }},FLASK_KEY=${{ secrets.FLASK_KEY }}"
