name: CI / CD

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  id-token: write

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    env:
      # ────── GCP project info ──────
      GCP_PROJECT:          ${{ secrets.INSTANCE }}
      GCP_PROJECT_NUMBER:   ${{ secrets.GCP_PROJECT_NUMBER }}
      REGION:               us-central1
      SERVICE:              shift-scheduler

      # ────── Cloud SQL credentials ──────
      DB_USER:               ${{ secrets.DB_USER }}
      DB_PASS:               ${{ secrets.DB_PASS }}
      DB_NAME:               ${{ secrets.DB_NAME }}
      INSTANCE_CONNECTION_NAME: ${{ secrets.INSTANCE_CONNECTION_NAME }}

      # ────── application secrets ──────
      GOOGLE_ID:             ${{ secrets.GOOGLE_ID }}
      GOOGLE_SECRET:         ${{ secrets.GOOGLE_SECRET }}
      FLASK_KEY:             ${{ secrets.FLASK_KEY }}

    defaults:
      run:
        working-directory: shifts_website

    steps:
    # ───────────────────────────────────── Base setup ─────────────────────────────
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt pytest freezegun

    # ─────────────────────────── Authenticate with GCP (OIDC) ─────────────────────
    - id: auth
      name: Authenticate to GCP via OIDC
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: >-
          projects/${{ env.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/shift-pool/providers/github-actions
        service_account: shift-scheduler@${{ env.GCP_PROJECT }}.iam.gserviceaccount.com
        create_credentials_file: true        # writes ADC JSON & sets $GOOGLE_APPLICATION_CREDENTIALS
        token_format: access_token           # fine for gcloud & proxy

    - name: Install gcloud SDK (beta component)
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ env.GCP_PROJECT }}
        install_components: beta

    # ───────────────────────── Cloud SQL Auth Proxy v2 ────────────────────────────
    - name: Start Cloud SQL proxy (v2)
      env:
        PROXY_VERSION: 2.17.1                # update as needed
        INSTANCE_CONNECTION_NAME: ${{ env.INSTANCE_CONNECTION_NAME }}
      run: |
        sudo mkdir -p /cloudsql

        curl -fsSL \
          "https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v${PROXY_VERSION}/cloud-sql-proxy.linux.amd64" \
          -o cloud-sql-proxy
        chmod +x cloud-sql-proxy

        # $GOOGLE_APPLICATION_CREDENTIALS already points at the ADC file created above
        sudo -E ./cloud-sql-proxy \
          --unix-socket /cloudsql \
          "$INSTANCE_CONNECTION_NAME" &

        # Wait up to 30 s for the Postgres socket to appear
        for i in {1..30}; do
          test -S "/cloudsql/${INSTANCE_CONNECTION_NAME}/.s.PGSQL.5432" && break
          echo "⏳ waiting for proxy ($i)"; sleep 1
        done

        echo "== sockets in /cloudsql =="
        find /cloudsql -maxdepth 2 -type s

    # ──────────────────────────────── Tests & Migrations ──────────────────────────
    - name: Run tests
      run: pytest

    - name: Run Alembic migrations
      env:
        DATABASE_URL: >-
          postgresql+psycopg2://${{ env.DB_USER }}:${{ env.DB_PASS }}@/${{ env.DB_NAME }}
          ?host=/cloudsql/${{ env.INSTANCE_CONNECTION_NAME }}
      run: alembic -c alembic.ini upgrade head

    - name: Write users.txt from secret
      run: |
        mkdir -p .ignore
        printf '%s\n' "${{ secrets.SEED_USERS }}" > .ignore/users.txt

    - name: Seed Users
      run: python seed_users.py

    # ─────────────────────────────── Build & Deploy ───────────────────────────────
    - name: Authorise Docker with Artifact Registry
      run: |
        gcloud auth configure-docker gcr.io --quiet
        gcloud auth configure-docker us-docker.pkg.dev --quiet

    - name: Build & push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./shifts_website
        file: ./shifts_website/Dockerfile
        push: true
        tags: us-docker.pkg.dev/${{ env.GCP_PROJECT }}/docker/${{ env.SERVICE }}:latest

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy "$SERVICE" \
          --image "us-docker.pkg.dev/${GCP_PROJECT}/docker/${SERVICE}:latest" \
          --platform managed \
          --region "$REGION" \
          --allow-unauthenticated \
          --service-account "shift-scheduler@${GCP_PROJECT}.iam.gserviceaccount.com" \
          --set-env-vars "DB_USER=${DB_USER},DB_PASS=${DB_PASS},DB_NAME=${DB_NAME},INSTANCE_CONNECTION_NAME=${INSTANCE_CONNECTION_NAME},GOOGLE_ID=${GOOGLE_ID},GOOGLE_SECRET=${GOOGLE_SECRET},FLASK_KEY=${FLASK_KEY}"
