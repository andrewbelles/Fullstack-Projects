name: CI / CD

on:
  push:
    branches: [ main ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: shifts_website
    permissions:
      contents: read 
      id-token: write 

    env:
      GOOGLE_PROJECT:           ${{ secrets.GOOGLE_PROJECT }}
      REGION:                   us-central1
      SERVICE:                  shift-scheduler
      DB_USER:                  ${{ secrets.DB_USER }}
      DB_PASS:                  ${{ secrets.DB_PASS }}
      DB_NAME:                  ${{ secrets.DB_NAME }}
      INSTANCE_CONNECTION_NAME: ${{ secrets.INSTANCE_CONNECTION_NAME }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest freezegun

      - name: Authenticate to GCP via OIDC
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/${{ env.GOOGLE_PROJECT }}/locations/global/workloadIdentityPools/shift-pool/providers/github-actions
          service_account: shift-scheduler@${{ env.GOOGLE_PROJECT }}.iam.gserviceaccount.com
          token_format: access_token

      - name: Install gcloud SDK (with beta)
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GOOGLE_PROJECT }}
          install_components: |
            beta

      - name: Start Cloud SQL Proxy
        run: |
          curl -fsSL \
            https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 \
            -o cloud_sql_proxy && chmod +x cloud_sql_proxy
          ./cloud_sql_proxy -instances=${INSTANCE_CONNECTION_NAME}=tcp:5432 & sleep 5

      - name: Run Alembic migrations
        run: alembic upgrade head

      - name: Seed users
        run: python seed_users.py

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker --quiet

      - name: Build & push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: gcr.io/${{ env.GOOGLE_PROJECT }}/${{ env.SERVICE }}:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE \
            --image gcr.io/$GOOGLE_PROJECT/$SERVICE:latest \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --set-env-vars DB_USER=${DB_USER},DB_PASS=${DB_PASS},DB_NAME=${DB_NAME},INSTANCE_CONNECTION_NAME=${INSTANCE_CONNECTION_NAME},GOOGLE_ID=${{ secrets.GOOGLE_ID }},GOOGLE_SECRET=${{ secrets.GOOGLE_SECRET }},FLASK_KEY=${{ secrets.FLASK_KEY }}
