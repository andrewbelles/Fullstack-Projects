name: CI / CD

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: shifts_website

    permissions:
      contents: read
      id-token: write

    env:
      INSTANCE_CONNECTION_NAME: ${{ secrets.INSTANCE_CONNECTION_NAME }}
      DB_USER:                   ${{ secrets.DB_USER }}
      DB_PASS:                   ${{ secrets.DB_PASS }}
      DB_NAME:                   ${{ secrets.DB_NAME }}
      GOOGLE_PROJECT:            ${{ secrets.GOOGLE_PROJECT }}
      REGION:                    us-central1
      SERVICE:                   shift-scheduler

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest

      # GCP Auth + Cloud SQL proxy
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Start Cloud SQL Auth proxy
        uses: google-github-actions/cloud-sql-proxy@v1
        with:
          instances: ${{ env.INSTANCE_CONNECTION_NAME }}

      # Migrations + seed
      - name: Run Alembic migrations
        run: alembic upgrade head

      - name: Seed users
        run: python app/scripts/seed_users.py

      # Build, push & deploy
      - name: Configure Docker to use gcr.io
        run: gcloud auth configure-docker --quiet

      - name: Build & Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: gcr.io/${{ env.GOOGLE_PROJECT }}/${{ env.SERVICE }}:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE }} \
            --image gcr.io/${{ env.GOOGLE_PROJECT }}/${{ env.SERVICE }}:latest \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --set-env-vars \
DB_USER=${{ env.DB_USER }},\
DB_PASS=${{ env.DB_PASS }},\
DB_NAME=${{ env.DB_NAME }},\
INSTANCE_CONNECTION_NAME=${{ env.INSTANCE_CONNECTION_NAME }},\
GOOGLE_ID=${{ secrets.GOOGLE_ID }},\
GOOGLE_SECRET=${{ secrets.GOOGLE_SECRET }},\
FLASK_KEY=${{ secrets.FLASK_KEY }}
